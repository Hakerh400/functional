[]()(
  var(comma, String() _comma _space),

  var(ofBeer, [](base)(
    base _space _o _f _space _b _e _e _r
  )),

  var(getWall, [](base)(
    base .clone()
      _space _o _n _space _t _h _e _space _w _a _l _l
  )),

  var(num, [](full, cap)(
    neq(bottlesNum, 0n)([]()(
      writeInt(bottlesNum)
    ), []()(
      bool(cap)(_N, _n).clone() _o _space _m _o _r _e .write()
    ))(),

    _space .write(),

    bool(full)([]()(
      plural()(_walls, _wall).write()
    ))()
  )),

  var(plural, []()(
    neq(bottlesNum, 1n)
  )),

  var(line1, [](cap)(
    num(1, cap),
    comma .write(),

    num(),
    plural()(_bottles, _bottle).write(),
    _. .write(),
    _newLine .write()
  )),

  var(line2, []()(
    comma .write(),
    num(1),
    _. .write()
  )),

  var(reset, []()(
    =(bottlesNum, 99n)
  )),

  var(_bottle, String() _b _o _t _t _l _e),
  var(_bottles, ofBeer(_bottle .clone() _s)),

  var(_wall, getWall(ofBeer(_bottle))),
  var(_walls, getWall(_bottles)),

  var(_and, String() _a _n _d),

  var(_take, String() _T _a _k _e _space _o _n _e)
    _space _d _o _w _n _space _and _space _p _a _s _s
    _space _i _t _space _a _r _o _u _n _d,

  var(bottlesNum),
  reset(),

  while([]()(neq(bottlesNum, 0n)), []()(
    line1(),

    =(bottlesNum, -(bottlesNum, 1n)),

    _take .write(),
    line2(),
    
    _newLine .write(),
    _newLine .write()
  )),

  line1(1),

  String() _G _o _space _t _o _space _t _h _e _space _s _t _o _r _e
    _space _and _space _b _u _y _space _s _o _m _e _space _m _o _r _e
    .write(),

  reset(),
  line2()
)()